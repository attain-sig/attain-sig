<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Add_Case_Record_to_Object_Variable</name>
        <label>Add Case Record to Object Variable</label>
        <locationX>138</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>sObjectCases</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_Cases</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Cases</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Opportunity_Amount</name>
        <label>Assign Opportunity Amount</label>
        <locationX>138</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varOpportunityAmount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Amount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Case_Record_to_Object_Variable</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Gift_Processing_Cases_Found</name>
        <label>Gift Processing Cases Found?</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Gift_Processing_Cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Cases</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Opportunity Amount Updated --&gt; Update GP Case Amount {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity Amount Updated --&gt; Update GP Case Amount</label>
    <loops>
        <name>Loop_Through_Cases</name>
        <label>Loop Through Cases</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <collectionReference>Get_Gift_Processing_Cases</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Opportunity_Amount</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Cases</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Gift_Processing_Cases</name>
        <label>Get Gift Processing Cases</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Gift_Processing_Cases_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Reason</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Refund</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed - Approved/Resolved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed - Cancelled/Not Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed - Unresolved</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Cases</name>
        <label>Update Cases</label>
        <locationX>50</locationX>
        <locationY>947</locationY>
        <inputReference>sObjectCases</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Gift_Processing_Cases</targetReference>
        </connector>
        <filterFormula>{!$Permission.Flow_Automations_Off} &lt;&gt; TRUE
&amp;&amp;
ischanged({!$Record.Amount})</filterFormula>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>15</triggerOrder>
    <variables>
        <name>sObjectCases</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>varOpportunityAmount</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
